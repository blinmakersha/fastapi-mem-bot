version: '3.9'

services:
  nginx:
    build:
      dockerfile: nginx/Dockerfile
      context: .
    ports:
      - "81:80"
      - "443:443"
    depends_on:
      - web
    networks:
      - sirius_network

  web:
    container_name: web
    build:
      dockerfile: docker/Dockerfile
      context: .
    ports:
      - "8000:8000"
    command: scripts/web/startup.sh -m -l
    restart: on-failure
    env_file:
      - ./conf/.env
    volumes:
      - .:/code
    depends_on:
      web_db:
        condition: service_healthy
    networks:
      - sirius_network

  rabbitmq:
    image: rabbitmq:3.10.7-management
    ports:
      - "15672:15672"
    environment:
      - RABBITMQ_DEFAULT_USER=rmuser
      - RABBITMQ_DEFAULT_PASS=rmpassword
    networks:
      - sirius_network

  web_db:
    container_name: web_db
    image: postgres:13.2
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=main_db
    restart: on-failure
    ports:
      - "5432:5432"
    command: [ "postgres", "-c", "log_statement=all", "-c", "log_destination=stderr" ]
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "postgres", "-d", "main_db" ]
      interval: 5s
      retries: 5
    volumes:
      - ./scripts/postgres:/docker-entrypoint-initdb.d
    networks:
      - sirius_network

  redis:
    container_name: redis
    image: redis:6.2.4
    ports:
      - "6379:6379"
    networks:
      - sirius_network

  ngrok:
    image: ngrok/ngrok
    environment:
      - NGROK_AUTHTOKEN=2hb1Qhrgp52Q2wK6wpVglDoZuoY_5BfWXytgMPQPVE2aMCoVV
    ports:
      - "4040:4040"
    command: http web:8000
    depends_on:
      - web
    networks:
      - sirius_network

  minio:
    image: minio/minio
    command: server --console-address ":9001" /data/
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minio123
    ports:
      - "9000:9000"
      - "9001:9001"
    networks:
      - sirius_network

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    command:
      - "--config.file=/etc/prometheus/prometheus_config.yml"
    ports:
      - "9090:9090"
    restart: unless-stopped
    depends_on:
      - web
    volumes:
      - ./prometheus:/etc/prometheus
      - prom_data:/prometheus
    networks:
      - sirius_network

  grafana:
    image: grafana/grafana
    container_name: grafana
    ports:
      - "3000:3000"
    restart: unless-stopped
    env_file: grafana/.env
    volumes:
      - ./grafana:/etc/grafana/provisioning/datasources
    depends_on:
      - web
    networks:
      - sirius_network

volumes:
  prom_data:

networks:
  sirius_network:
    external: True
